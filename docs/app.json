[{"name":"app.R","content":"# library(qrcode)\r\n\r\n# code <- qr_code(\"QR CODE\")\r\n# print(code)\r\n# \r\n# plot(code)\r\n# /c/Users/kogi/Documents/QRapp/QRcodeGenerator \r\n# shinylive::export(\"C:/Users/kogi/Documents/repos/QRcodeGenerator\", \"site\")\r\n# shinylive::export(appdir = \"C:/Users/kogi/Documents/repos/QRapps/QRcodeGenerator\", destdir = \"docs\")\r\n# library(curl)\r\n\r\n\r\n# library(shiny)\r\ndownloadButton <- function(...) {\r\n  tag <- shiny::downloadButton(...)\r\n  tag$attribs$download <- NULL\r\n  tag\r\n}\r\n\r\n\r\n\r\nui <- fluidPage(\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      textInput(\"link\", \"Enter link below.\", \"www.fhi.no\")\r\n    ),\r\n    mainPanel(\r\n      plotOutput(\"tplot\" ),\r\n      downloadButton(\"downloadData\", \"Download QR in pdf\"),\r\n      downloadButton(\"downloadData2\", \"Download QR in png\")\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output) {\r\n  # if (identical(Sys.getenv(\"R_CONFIG_ACTIVE\"), \"shinyapps\")) {\r\n  #   chromote::set_default_chromote_object(\r\n  #     chromote::Chromote$new(chromote::Chrome$new(\r\n  #       args = c(\"--disable-gpu\", \r\n  #                \"--no-sandbox\", \r\n  #                \"--disable-dev-shm-usage\", # required bc the target easily crashes\r\n  #                c(\"--force-color-profile\", \"srgb\"))\r\n  #     ))\r\n  #   )\r\n  # }\r\n  \r\n  tplot <- reactive({\r\n    qr <- qrcode::qr_code(input$link)\r\n    plot(qr)\r\n    \r\n  })\r\n  output$tplot <- renderPlot({\r\n    tplot()\r\n  })\r\n  \r\n  output$downloadData <- downloadHandler(\r\n    filename = \"qrfile.pdf\",\r\n    content = function(file) {\r\n      pdf(file) # open the pdf device\r\n      plot(qrcode::qr_code(input$link)) # draw the plot\r\n      dev.off()  # turn the device off\r\n    }\r\n  )\r\n  \r\n  output$downloadData2 <- downloadHandler(\r\n    filename = \"qrfile.png\",\r\n    content = function(file) {\r\n      png(file) # open the pdf device\r\n      plot(qrcode::qr_code(input$link)) # draw the plot\r\n      dev.off()  # turn the device off\r\n    }\r\n  )\r\n  # outputOptions(output, \"save\", suspendWhenHidden = FALSE)\r\n}\r\nshiny::shinyApp(ui, server)","type":"text"},{"name":"README.md","content":"# QRcodeGenerator","type":"text"}]

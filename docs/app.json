[{"name":"app.R","content":"# library(qrcode)\r\n\r\n# code <- qr_code(\"QR CODE\")\r\n# print(code)\r\n# \r\n# plot(code)\r\n# shinylive::export(\"../myapp\", \"site\")\r\n# shinylive::export(appdir = \"../myapp\", destdir = \"docs\")\r\n\r\n\r\n# library(shiny)\r\n\r\nui <- fluidPage(\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      \r\n      textInput(\"link\", \"Enter link below. If the download link don't work (in Chrome/Edge), right click on them and open in new tab.\", \"www.fhi.no\")\r\n    ),\r\n    mainPanel(\r\n      plotOutput(\"tplot\" ),\r\n      downloadButton(\"save\", \"Download QR in pdf\"),\r\n      downloadButton(\"save2\", \"Download QR in png\")\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output) {\r\n  tplot <- reactive({\r\n    qr <- qrcode::qr_code(input$link)\r\n    plot(qr)\r\n    \r\n  })\r\n  output$tplot <- renderPlot({\r\n    tplot()\r\n  })\r\n  \r\n  # downloadHandler contains 2 arguments as functions, namely filename, content\r\n  output$save <- downloadHandler(\r\n    filename =  function() {\r\n      paste(\"qr.pdf\")\r\n    },\r\n    # content is a function with argument file. content writes the plot to the device\r\n    content = function(file) {\r\n      pdf(file) # open the pdf device\r\n      plot(qrcode::qr_code(input$link)) # draw the plot\r\n      dev.off()  # turn the device off\r\n    } \r\n  )\r\n  output$save2 <- downloadHandler(\r\n    filename =  function() {\r\n      paste(\"qr.png\")\r\n    },\r\n    # content is a function with argument file. content writes the plot to the device\r\n    content = function(file) {\r\n      png(file) # open the pdf device\r\n      plot(qrcode::qr_code(input$link)) # draw the plot\r\n      dev.off()  # turn the device off\r\n    } \r\n  )\r\n  # outputOptions(output, \"save\", suspendWhenHidden = FALSE)\r\n}\r\nshiny::shinyApp(ui, server)","type":"text"},{"name":"2024-10-01_qr.pdf","content":"JVBERi0xLjQKJYHigeOBz4HTXHIKMSAwIG9iago8PAovQ3JlYXRpb25EYXRlIChEOjIwMjQx\nMDAxMTQ0NjIzKQovTW9kRGF0ZSAoRDoyMDI0MTAwMTE0NDYyMykKL1RpdGxlIChSIEdyYXBo\naWNzIE91dHB1dCkKL1Byb2R1Y2VyIChSIDQuMy4wKQovQ3JlYXRvciAoUikKPj4KZW5kb2Jq\nCjIgMCBvYmoKPDwgL1R5cGUgL0NhdGFsb2cgL1BhZ2VzIDMgMCBSID4+CmVuZG9iago3IDAg\nb2JqCjw8IC9UeXBlIC9QYWdlIC9QYXJlbnQgMyAwIFIgL0NvbnRlbnRzIDggMCBSIC9SZXNv\ndXJjZXMgNCAwIFIgPj4KZW5kb2JqCjggMCBvYmoKPDwKL0xlbmd0aCAyNzczIC9GaWx0ZXIg\nL0ZsYXRlRGVjb2RlCj4+CnN0cmVhbQp4nJ2cu44jyRVE/f4KfsGo68GXK2cBeSNHH7CQDBkL\nrOb/AY36RhACqk4MgsYMGjwdZFZmRjCrOm8ul79dlsu/L39+fNe/v/z4+29/vfz+42P59vn5\nefn//3/8/sfH58+fLl//LY9vt7v+/88/Py7/+ji8fIDb/du2Ebzewtve9/C2zy287bKsqbnb\nZ3jjZX+md749Ykfcwjuvn9fwzuu6h3de9zW9821J7/xIg7c+4+gtafi2LY3fdk0DuN3TCG7P\nNIL7kkZwX9MI7nsawf2WRnB/wAjOz9DNR3scKblkfiabzM/kk/mZjKJXyCl6hayiV8greoXM\n4legr+dntIsw+UWYDCNMjhEmywiTZzSYZBphco0w2cYzJQ4oGmd+RucIk3WEyTvCZB5hcs9M\nfujxozOOlNwzr5N7hpJ7hpJ79InkHmFyjzC5R5jc46uFzh6M7hEm9wiTe4TJPcLkHmFyjwaT\n3CNM7hEm93imxAFF9wxG9wiTe4TJPcLkHmFyz0xv6PHj3D/StEKbN/b//1sNjoY8Na+Tp4aS\np/Se5Clh8pQweUoYv5FOV76+yrAmoA5C/wnjt1doSFwEYkPIq8L4TZcaktaM1BD0tTD5Wph8\n7TkcJxX6ejD6Whi/FUMfoduFye3C5PaxFozZ0XdH2rl9NLj+PL3+0VAGzOuUAVJRBghTBgin\nOzi6xDIZfHVVMoyI17Xhk+LdIX4SroHTJ6V7SfykLkUk6lJE0xfX1uGTMFuEKVvsmDhZMVsG\n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\n5tXlNKBrLsSPbcUoMcfQWHMhvnm3KrGqDI01l+ebYzysuRD/NavzbOJ4WHMhvnkZBGsuuTfH\nIFhzyb3emILg+LEnGINgj8X1wrh62GNxvZuG5t5zcb05rgj2XFz/6hrq+D0XzJujNfdcBG+O\n1txzYbs5mdBji3bbc7G6OdrNcyePL9ttz8Xq5mQ3czTWnsvSzdFYt1SWfvK2JxiNdYtl6cJo\nrFssS3fT0Fi3XJZujsa65bL0V9dQx99yAbo5GuuWC9DN0Vi3XGpujsa65VJzczTWLZeav+ZO\nHl821i2XmpujsW651NwcjXXLpeYC1PtH2QlGYz1iUbkwGusRi8rdNDTWI5ePm6OxHrl8/NU1\n1PGPXBJujsZ65JJwczTWIxd/m6OxHrmg2xyN9chF2q+5k8eXjfXI5djmaKxHLrE2R2M9con1\n98ufl+vz2+d++XmF+/6zofu3+/rzepdv1/Xn71z+cfnj4/vHfwHJtPQUZW5kc3RyZWFtCmVu\nZG9iagozIDAgb2JqCjw8IC9UeXBlIC9QYWdlcyAvS2lkcyBbIDcgMCBSIF0gL0NvdW50IDEg\nL01lZGlhQm94IFswIDAgNTA0IDUwNF0gPj4KZW5kb2JqCjQgMCBvYmoKPDwKL1Byb2NTZXQg\nWy9QREYgL1RleHRdCi9Gb250IDw8Pj4KL0V4dEdTdGF0ZSA8PCA+PgovQ29sb3JTcGFjZSA8\nPCAvc1JHQiA1IDAgUiA+Pgo+PgplbmRvYmoKNSAwIG9iagpbL0lDQ0Jhc2VkIDYgMCBSXQpl\nbmRvYmoKNiAwIG9iago8PCAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL04gMyAvTGVuZ3RoIDI1\nOTYgL0ZpbHRlciAvRmxhdGVEZWNvZGUgPj4Kc3RyZWFtCnicnZZ3VFPZFofPvTe9UJIQipTQ\na2hSAkgNvUiRLioxCRBKwJAAIjZEVHBEUZGmCDIo4ICjQ5GxIoqFAVGx6wQZRNRxcBQblklk\nrRnfvHnvzZvfH/d+a5+9z91n733WugCQ/IMFwkxYCYAMoVgU4efFiI2LZ2AHAQzwAANsAOBw\ns7NCFvhGApkCfNiMbJkT+Be9ug4g+fsq0z+MwQD/n5S5WSIxAFCYjOfy+NlcGRfJOD1XnCW3\nT8mYtjRNzjBKziJZgjJWk3PyLFt89pllDznzMoQ8GctzzuJl8OTcJ+ONORK+jJFgGRfnCPi5\n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\nqk0fS3glF0utSytK32/mbr74lc1XlV992pK0ZbDMoWzPVsxW4dbr29y3HShXLs8vH9sesr1z\nB2NHyY6XO5fsvFBhV1G3i7BLsktaGVzZXWVQtbXqfXVK9UiNV017rWbtptrXu3m7r+zx2NNW\np1VXWvdur2DvzXq/+s4Go4aKfZh9OfseNkY39n/N+rq5SaOptOnDfuF+6YGIA33Njs3NLZot\nZa1wq6R18mDCwcvfeH/T3cZsq2+nt5ceAockhx5/m/jt9cNBh3uPsI60fWf4XW0HtaOkE+pc\n3jnVldIl7Y7rHj4aeLS3x6Wn43vL7/cf0z1Wc1zleNkJwomiE59O5p+cPpV16unp5NNjvUt6\n75yJPXOtL7xv8GzQ2fPnfM+d6ffsP3ne9fyxC84Xjl5kXey65HCpc8B+oOMH+x86Bh0GO4cc\nh7ovO13uGZ43fOKK+5XTV72vnrsWcO3SyPyR4etR12/eSLghvcm7+ehW+q3nt3Nuz9xZcxd9\nt+Se0r2K+5r3G340/bFd6iA9Puo9OvBgwYM7Y9yxJz9l//R+vOgh+WHFhM5E8yPbR8cmfScv\nP174ePxJ1pOZp8U/K/9c+8zk2Xe/ePwyMBU7Nf5c9PzTr5tfqL/Y/9LuZe902PT9VxmvZl6X\nvFF/c+At623/u5h3EzO577HvKz+Yfuj5GPTx7qeMT59+A/eE8/tlbmRzdHJlYW0KZW5kb2Jq\nCjkgMCBvYmoKPDwKL1R5cGUgL0VuY29kaW5nIC9CYXNlRW5jb2RpbmcgL1dpbkFuc2lFbmNv\nZGluZwovRGlmZmVyZW5jZXMgWyA0NS9taW51cyBdCj4+CmVuZG9iagp4cmVmCjAgMTAKMDAw\nMDAwMDAwMCA2NTUzNSBmIAowMDAwMDAwMDIxIDAwMDAwIG4gCjAwMDAwMDAxNjMgMDAwMDAg\nbiAKMDAwMDAwMzEzNyAwMDAwMCBuIAowMDAwMDAzMjIwIDAwMDAwIG4gCjAwMDAwMDMzMjEg\nMDAwMDAgbiAKMDAwMDAwMzM1NCAwMDAwMCBuIAowMDAwMDAwMjEyIDAwMDAwIG4gCjAwMDAw\nMDAyOTIgMDAwMDAgbiAKMDAwMDAwNjA0OSAwMDAwMCBuIAp0cmFpbGVyCjw8IC9TaXplIDEw\nIC9JbmZvIDEgMCBSIC9Sb290IDIgMCBSID4+CnN0YXJ0eHJlZgo2MTQzCiUlRU9GCg==","type":"binary"},{"name":"qrGenerator.R","content":"library(qrcode)\r\n\r\n# code <- qr_code(\"QR CODE\")\r\n# print(code)\r\n# \r\n# plot(code)\r\n\r\n\r\nlibrary(shiny)\r\n\r\nui <- fluidPage(\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      \r\n      textInput(\"link\", \"Enter link here\", \"www.fhi.com\"),\r\n      downloadButton(\"save\", \"Download QR\")\r\n    ),\r\n    mainPanel(\r\n      plotOutput(\"tplot\" ) \r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output) {\r\n  tplot <- reactive({\r\n    qr <- qr_code(input$link)\r\n    plot(qr)\r\n    \r\n  })\r\n  output$tplot <- renderPlot({\r\n    tplot()\r\n  })\r\n  \r\n  # downloadHandler contains 2 arguments as functions, namely filename, content\r\n  output$save <- downloadHandler(\r\n    filename =  function() {\r\n      paste(\"myplot.pdf\")\r\n    },\r\n    # content is a function with argument file. content writes the plot to the device\r\n    content = function(file) {\r\n      pdf(file) # open the pdf device\r\n      plot(qr_code(input$link)) # draw the plot\r\n      dev.off()  # turn the device off\r\n    } \r\n  )\r\n}\r\nshinyApp(ui, server)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n# ui <- fluidPage(\r\n#   titlePanel(\"QR code generator\"),\r\n#   \r\n#   sidebarLayout(\r\n#     sidebarPanel(\r\n#       helpText(\"Write the url for which you want a QR code.\"),\r\n#       \r\n#       textInput(\"urlIn\", \"URL\", \"https://www.fhi.no/\")\r\n#     ),\r\n#     \r\n#     mainPanel(\r\n#     plotOutput(outputId = \"distPlot\"),\r\n#       downloadButton(\"downloadPlot\", \"Download svg\")\r\n#     )\r\n#   )\r\n# )\r\n# \r\n# server <- function(input, output) {\r\n#   \r\n#     output$distPlot <- renderPlot({\r\n#       \r\n#       code <- qr_code(as.character(input$urlIn),ecl=\"H\")\r\n#       plot(code)\r\n#     })\r\n#     output$downloadPlot <- downloadHandler(\r\n#       code <- qr_code(as.character(input$urlIn),ecl=\"H\"),\r\n#       filename = function() { paste(\"test\", '.svg', sep='') },\r\n#       content = function(file) {\r\n#         svg(file, width = 100, height = 100)\r\n#         code <- qr_code(as.character(input$urlIn),ecl=\"H\")\r\n#         generate_svg(qrcode = code, filename = \"myQRcode.svg\", show = interactive())\r\n#         dev.off()\r\n#         # generate_svg(qrcode = code, filename = \"myQRcode.svg\", show = interactive())\r\n#       }\r\n#     )\r\n#     \r\n#   \r\n# }\r\n# \r\n# shinyApp(ui, server)","type":"text"}]
